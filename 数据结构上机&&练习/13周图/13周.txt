【问题描述】采用邻接矩阵作为存储结构，利用深度优先搜索，判断有向图中，是否存在从顶点i到顶点j的路径；

 要求：

从键盘输入若干个字符(表示顶点自带的信息),直到！结束->再输入若干对顶点编号（从0开始，表示两个顶点之间存在一条边），直到输入-1 -1结束-->输出对应的邻接矩阵 -->输入查询的顶点-->输出T 或者F
【输入形式】

ABCDE!
0 1
0 2
1 3
1 2
2 3
3 4
-1 -1
BE
【输出形式】

0 1 1 0 0
0 0 1 1 0
0 0 0 1 0
0 0 0 0 1
0 0 0 0 0
T


480-2023-41【问题描述2】有向图中，出度大于入度的顶点称为K顶点，请基于上述输入，设计并实现算法 int printvertices（MGraph G）对给定任意非空有向图G，输入G中所有K顶点，并返回K顶点的个数。在主函数中进行测试。（采用上一题邻接矩阵存储即可）





【问题描述3】请基于第一题的邻接矩阵存储和输入，设计一个算法，判断一个无向图G是否为一棵树，若是一棵树，则返回TRUE,否则返回FALSE； 并在主函数进行测试，输出YES或NO；
提示：判断一个无向图是否为树，G必须是一个有n-1条边的连通图



这是明天上机的三个题目，发给大家哦，存储结构和输入方式三题都是一样的，只需要实现三个不同的函数，在主函数里分别进行测试即可~~~~

第三题，对于连通的判定，上课讲过，可以用能否一次遍历就访问所有的顶点来实现，所以用DFS深度优先搜索统计调用一次的顶点个数和边数
